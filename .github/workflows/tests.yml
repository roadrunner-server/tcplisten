name: tests

on: [push, pull_request]

jobs:
  golang:
    name: Build (Go ${{ matrix.go }}, OS ${{matrix.os}})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        go: [stable]
        os: ["ubuntu-latest", "macos-latest"]
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v5 # action page: <https://github.com/actions/setup-go>
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v4

      - name: Init Go modules Cache # Docs: <https://git.io/JfAKn#go---modules>
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Run golang tests with coverage
        run: |
          cd tests
          mkdir ./coverage
          go test -v -race -cover -coverpkg=./... -coverprofile=./coverage/tcplisten-${{ matrix.os }}.out -covermode=atomic ./...

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: tcplisten-${{ matrix.os }}
          path: ./tests/coverage/tcplisten-${{ matrix.os }}.out

  codecov:
    name: Upload codecov
    runs-on: ubuntu-latest
    needs:
      - golang

    timeout-minutes: 60
    steps:
      - name: Download code coverage results
        uses: actions/download-artifact@v5
      - run: |
          cd tcplisten-ubuntu-latest
          echo 'mode: atomic' > summary.txt
          tail -q -n +2 *.out >> summary.txt
          sed -i '2,${/roadrunner/!d}' summary.txt

      - name: upload to codecov
        uses: codecov/codecov-action@v5 # Docs: <https://github.com/codecov/codecov-action>
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/summary.txt
          fail_ci_if_error: false
